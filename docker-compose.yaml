services:
  infra_api:
    image: gitops.asax.ir/infrastructure-automation-team/security-automation/access-rule-automation/utm-automation:slim
    container_name: infra_api
    restart: unless-stopped
    networks:
      - utm_automation
      - traefik-net
    command: python infra-api/manage.py runserver 0.0.0.0:8000
    depends_on:
      redis:
        condition: service_healthy
      rabbit:
        condition: service_healthy
    volumes:
      - /opt/terraform_resources:/opt/terraform_resources
    env_file:
      - ./.env
    environment:
      - TZ=Asia/Tehran
    labels:
      - traefik.enable=true
      - traefik.docker.network=traefik-net
      - traefik.http.routers.utm_api.entrypoints=utm
      - traefik.http.routers.utm_api.rule=Host(`iaas-app.asax.ir`)
      - traefik.http.routers.utm_api.tls=false
      - traefik.http.routers.utm_api.tls.options=default
      - traefik.http.services.utm_api.loadbalancer.server.port=8000

  queue_executor:
    image: gitops.asax.ir/infrastructure-automation-team/security-automation/access-rule-automation/utm-automation:slim
    container_name: queue_executor
    restart: unless-stopped
    volumes:
      - /opt/terraform_resources:/opt/terraform_resources
    networks:
      - utm_automation
      - traefik-net
    depends_on:
      redis:
        condition: service_healthy
      rabbit:
        condition: service_healthy
    env_file:
      - ./.env
    command: ["python", "queue_executor/proccess_queue.py"]

  redis:
    image: repo.asax.ir/redis:7.2-alpine
    container_name: redis
    restart: always
    pull_policy: if_not_present
    networks:
      - utm_automation
    healthcheck:
      test: [ "CMD", "redis-cli", "--raw", "incr", "ping" ]

  rabbit:
    image: repo.asax.ir/rabbitmq:3-alpine
    container_name: rabbit
    pull_policy: if_not_present
    restart: always
    networks:
      - utm_automation
    healthcheck:
      test: rabbitmq-diagnostics -q ping

  traefik:
    image: repo.asax.ir/traefik:3.1
    pull_policy: if_not_present
    restart: unless-stopped
    container_name: traefik
    networks:
      - traefik-net
    ports:
      - 8001:8001
      - 8002:8002
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - ./certs:/certs:ro
    command:
      - --log.level=ERROR
      - --log.filepath=/log-file.log
      - --log.format=json
      - --api=true
      - --api.insecure=true
      - --ping=true
      - --accesslog=true
      - --accesslog.fields.names.StartUTC=drop
      - --accesslog.bufferingsize=250
      - --providers.docker.endpoint=unix:///var/run/docker.sock
      - --providers.docker.exposedbydefault=false
      - --providers.docker.network=traefik-net
      - --entrypoints.utm.address=:8001
      - --entrypoints.vcenter.address=:8002 
      - --metrics.prometheus=true
      - --entryPoints.metrics.address=:8082
      - --metrics.prometheus.entryPoint=metrics
      - --providers.file.directory=/certs

networks:
    utm_automation:
      name: utm_automation
    traefik-net:
      name: traefik-net
